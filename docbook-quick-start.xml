<?xml version="1.0" encoding="utf-8"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0"
         xmlns:xlink="http://www.w3.org/1999/xlink">

  <info>
    <title>DocBook Quick Start</title>
    <subtitle>Getting Up and Running with DocBook</subtitle>
    <authorgroup>
      <author>
        <orgname>LOCKSS Program, Stanford University Libraries</orgname>
      </author>
    </authorgroup>
  </info>

  <!-- INTRODUCTION -->
  <section xml:id="introduction">

    <title>Introduction</title>

    <para><link xlink:href="http://docbook.org/">DocBook</link> version 5.0 is an XML language standardized by OASIS that describes documents such as articles and books. Tools exist that can translate DocBook input into intermediary formats like XSL Formatting Objects (XSL-FO) or output formats like PDF, PostScript, <command>man</command> pages, HTML Web sites, and more. This document describes a basic set of DocBook features that can be used to produce documentation and other technical documents.</para>

    <!-- INTRODUCTION > USING THE LOCKSS-DOCBOOK PACKAGE -->
    <section xml:id="introduction-usingthelockssdocbookpackage">

      <title>Using the <package>lockss-docbook</package> Package</title>

      <para>The <link xlink:href="http://www.lockss.org/">LOCKSS Team</link> has bundled up a tool chain to process DocBook documents into PDF documents using XSL Formatting Objects (XSL-FO) and Apache FOP 2.1. This <package>lockss-docbook</package> package can be found on GitHub at <link xlink:href="https://github.com/lockss/lockss-docbook" />.</para>
      <para>To use it, you will need Java 6 or better and <command>git</command>.</para>
      <procedure>
        <step>
          <para>Clone the <package>lockss-docbook</package> project:</para>
          <para><userinput>git clone https://github.com/lockss/lockss-docbook</userinput></para>
        </step>
        <step>
          <para>Invoke <command>makedoc</command> (<filename>lockss-docbook/bin/makedoc</filename>) with the <option>-pdf</option> option on any number of DocBook XML files, which will generate PDF files with corresponding names:</para>
          <para><userinput>makedoc -pdf <replaceable>myfile.xml</replaceable></userinput></para>
        </step>
      </procedure>

    </section>
    <!-- INTRODUCTION > USING THE LOCKSS-DOCBOOK PACKAGE -->

  </section>
  <!-- INTRODUCTION -->

  <!-- STRUCTURE -->
  <section xml:id="structure">

    <title>Structure</title>

    <para>All DocBook documents begin with an XML preamble:</para>
    <programlisting><![CDATA[<?xml version="1.0" encoding="utf-8"?>]]></programlisting>
    <para>You have a choice of top-level element:</para>
    <itemizedlist>
      <listitem>
        <para><code><![CDATA[<article>]]></code>: a single article or document (most likely)</para>
      </listitem>
      <listitem>
        <para><code><![CDATA[<book>]]></code>: a book; a book consists of <code><![CDATA[<chapter>]]></code> and <code><![CDATA[<part>]]></code> elements (and a part consists of <code><![CDATA[<chapter>]]></code> elements)</para>
      </listitem>
      <listitem>
        <para><code><![CDATA[<set>]]></code>: a collection of books; a set consists of <code><![CDATA[<book>]]></code> elements</para>
      </listitem>
    </itemizedlist>
    <para>Whichever top-level element you choose (say <code><![CDATA[<article>]]></code>), declare the following namespaces:</para>
    <programlisting><![CDATA[<article xmlns="http://docbook.org/ns/docbook" version="5.0"
         xmlns:xlink="http://www.w3.org/1999/xlink">
  ...
</article>]]></programlisting>
    <para>The top-level tags <code><![CDATA[<set>]]></code>, <code><![CDATA[<book>]]></code>, <code><![CDATA[<part>]]></code>, <code><![CDATA[<chapter>]]></code> and <code><![CDATA[<article>]]></code> each begin with an <code><![CDATA[<info>]]></code> stanza with a rich vocabulary to describe bilbiographic metadata (title and subtitle, dates, publisher information...) and to attribute names, contact information and organizational affiliations to various kinds of contributors (author, collaborator, editor...). Without going into detail, the essential is to provide:</para>
    <itemizedlist>
      <listitem>
        <para>A title with <code><![CDATA[<title>]]></code></para>
      </listitem>
      <listitem>
        <para>An optional subtitle with <code><![CDATA[<subtitle>]]></code></para>
      </listitem>
      <listitem>
        <para>An author group with <code><![CDATA[<authorgroup>]]></code>, containing one or more <code><![CDATA[<author>]]></code> elements. At the simplest level, an <code><![CDATA[<author>]]></code> contains either the name of an organizational author with <code><![CDATA[<orgname>]]></code> or the name of an individual author with <code><![CDATA[<personname>]]></code>.</para>
      </listitem>
    </itemizedlist>
    <para>Example:</para>
    <programlisting><![CDATA[<info>
  <title>Main Title</title>
  <subtitle>The Subtitle Goes Here</subtitle>
  <authorgroup>
    <author>
      <personname>John H. Smith</personname>
    </author>
    <author>
      <orgname>The MegaDocBook Foundation</orgname>
    </author>
  </authorgroup>
</info>]]></programlisting>

    <para>The <code><![CDATA[<article>]]></code> and <code><![CDATA[<chapter>]]></code> elements are sub-divided into nested <code><![CDATA[<section>]]></code> elements that begin with a <code><![CDATA[<title>]]></code> and optional <code><![CDATA[<subtitle>]]></code>, followed by any number of content blocks:</para>
      <programlisting><![CDATA[<section>
  <title>First Section</title>
  ...
  <section>
    <title>First Subsection</title>
    ...
  </section>
  <section>
    <title>Second Subsection</title>
    ...
  </section>
</section>
<section>
  <title>Second Section</title>
  ...
</section>]]></programlisting>

  </section>
  <!-- STRUCTURE -->

  <!-- ESSENTIAL CONTENT BLOCKS -->
  <section xml:id="essentialcontentblocks">

    <title>Essential Content Blocks</title>

    <para>Sections are then made up of content blocks. DocBook provides a rich vocabulary of content structures, the most important of which are:</para>
    <itemizedlist>
      <listitem>
        <para>Paragraphs with <code><![CDATA[<para>]]></code>:</para>
        <programlisting><![CDATA[<para>This is a paragraph.</para>
<para>This is another paragraph.</para>]]></programlisting>
      </listitem>
      <listitem>
        <para>Lists with <code><![CDATA[<itemizedlist>]]></code> or <code><![CDATA[<orderedlist>]]></code>, which then contain one or more <code><![CDATA[<listitem>]]></code> elements, each of which can contain whatever content (as little as a single paragraph):</para>
        <programlisting><![CDATA[<itemizedlist>
  <listitem>
    <para>First bullet in the list.</para>
  </listitem>
  <listitem>
    <para>Second bullet in the list.</para>
  </listitem>
  <listitem>
    <para>Third bullet in the list.</para>
  </listitem>
</itemizedlist>]]></programlisting>
      </listitem>
      <listitem>
        <para>Asides in the form of <code><![CDATA[<note>]]></code>, <code><![CDATA[<tip>]]></code>, <code><![CDATA[<caution>]]></code>, <code><![CDATA[<warning>]]></code> or <code><![CDATA[<important>]]></code> stanzas, containing whatever content (as little as a single paragraph):</para>
        <programlisting><![CDATA[<note>
  <para>This is a note.</para>
</note>]]></programlisting>
        <para>It may be rendered like this:</para>
        <note>
          <para>This is a note.</para>
        </note>
      </listitem>
      <listitem>
        <para>Verbatim listings in the form of a <code><![CDATA[<programlisting>]]></code> stanza. To make your life easier with less-than, greater-than and ampersand characters that are present in source code fragments, you may want to escape the contents of the <code><![CDATA[<programlisting>]]></code> between <code>&lt;![CDATA[</code> and <code>]]&gt;</code>.</para>
        <programlisting>&lt;programlisting&gt;&lt;![CDATA[#!/bin/sh
echo "This is a shell script"
exit 1]]&gt;&lt;/programlisting&gt;</programlisting>
      </listitem>
    </itemizedlist>
    <para>There is also a rich markup vocabulary inline, the most important being:</para>
    <itemizedlist>
      <listitem>
        <para><code><![CDATA[<code>]]></code> for <code>literals</code>: code fragments, variable names, commands, etc.</para>
      </listitem>
      <listitem>
        <para><code><![CDATA[<emphasis>]]></code> for <emphasis>emphasis</emphasis>: important words, term definitions, etc.</para>
      </listitem>
      <listitem>
        <para><code><![CDATA[<link>]]></code> for hyperlinks:</para>
        <itemizedlist>
          <listitem>
            <para><code><![CDATA[<link xlink:href="http://docbook.org/">]]>DocBook<![CDATA[</link>]]></code> produces: <link xlink:href="http://docbook.org/">DocBook</link></para>
          </listitem>
          <listitem>
            <para><code><![CDATA[<link xlink:href="http://docbook.org/" />]]></code> produces: <link xlink:href="http://docbook.org/" /></para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

  </section>
  <!-- ESSENTIAL CONTENT BLOCKS -->

  <!-- ELEMENT REFERENCE -->
  <section xml:id="elementreference">

    <title>Element Reference</title>

    <para>The full DocBook element reference (fairly well organized) can be found here: <link xlink:href="http://docbook.org/tdg5/en/html/chunk-part-d64e8789.html" /></para>

  </section>
  <!-- ELEMENT REFERENCE -->

</article>

